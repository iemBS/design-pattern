Handle Error
Note:
  -Try Catch 
    -in C#
      -https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/try-catch
    -in Java
      -https://www.w3schools.com/java/java_try_catch.asp
    -in JavaScript
      -https://www.w3schools.com/js/js_errors.asp
      -https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/try...catch
    -in Python
      -https://www.w3schools.com/python/python_try_except.asp
      -https://boto3.amazonaws.com/v1/documentation/api/latest/guide/error-handling.html
Main Success Scenario:
  1. "Watch Error Prone Code"
  2. "Associate Error Handler to Code Watcher"
  3. "Handle Error Implicitly"
  4. End
Alternatives:
  3a. Handle Explicitly
    3a1. "Handle Error Explicitly"
    3a2. Go to step 4
  
  
Watch Error Prone Code
Main Success Scenario:
  1. "Watch Error Prone Code Implicitly"
Alternatives:
  1a. Watch Explicitly
    1a1. "Watch Error Prone Code Explicitly"
    
    
Watch Error Prone Code Implicitly
Note:
  -in C#, use "try" block
  -in Java, use "try" block
  -in JavaScript, use "try"
  -in Python, use "try" block
Main Success Scenario:
  1. xxx:fill in 


Watch Error Prone Code Explicitly
Note:
  -in C#
    -xxx
  -in Java
    -xxx
  -in JavaScript
    -xxx
  -in Python
    -IF condition, ref @ https://realpython.com/python-conditional-statements/
    -MATCH statement, ref @ https://docs.python.org/3.10/whatsnew/3.10.html#pep-634-structural-pattern-matching
    -IF condition with custom function, ref @ https://stackoverflow.com/questions/60208/replacements-for-switch-statement-in-python
Main Success Scenario:
  1. Use IF condition
  2. Throw error if conditions met
  3. End 
Alternatives:
  1a. Use CASE/SWITCH/MATCH statement 
    1a1. CASE/SWITCH/MATCH statement 
    1a2. Go to step 2
  1b. IF conditions with custom function
    1b1. IF conditions with custom function
    1b2. Go to step 2

  
Associate Error Handler to Code Watcher
Note:
  -in C#
    -use "catch", ref @ xxx
  -in Java
    -xxx
  -in JavaScript
    -xxx
  -in Python
    -use "except", ref @ https://docs.python.org/3/tutorial/errors.html
    -use "finally", ref @ https://docs.python.org/3/tutorial/errors.html
Main Success Scenario:
  1. Handle Specific Error Type
  2. End
Alternatives:
  1a. Handle Base Error Type
    1a1. xxx:fill in 
    1a2. Go to step 2
  1b. Handle regardless of Error Type
    1b1. Use "finally" block
    1b2. Go to step 2
    

Handle Error Explicitly
Main Success Scenario:
  1. "Note Error Occurrence"
  2. "Auto Fix Error"
  3. "Try Code Again"
  4. "Clean Up Before Code Exit"
  5. "Exit Code"
  6. End 
Alternatives:
  3a. Error cannot be fixed and priority or impact too high to continue code execution
    3a1. "Re-Throw Error"
    3a2. Go to step 4
  
  
Handle Error Implicitly
Main Success Scenario:
  1. xxx:fill in 
  
  
Categorize Error
Note:
  -Category related to error priority, impact, notification, how watched for, and how handled.
Main Success Scenario:
  1. xxx:fill in 
  
  
Define Max Trys
Main Success Scenario:
  1. xxx:fill in 
  
  
Note Error Occurrence
Note:
  -Noted error may also contribute to tracking of code execution run time or completion status
Main Success Scenario:
  1. xxx:fill in 
  
  
Try Code Again
Pre-Condition:
  -"Define Max Trys"
Main Success Scenario:
  1. xxx:fill in 
  
  
Auto Fix Error
Main Success Scenario:
  1. xxx:fill in 
  
    
Clean Up Before Code Exit
Note:
  -In Python
    -"finally" block, ref @ https://docs.python.org/3/tutorial/errors.html#defining-clean-up-actions
    -https://docs.python.org/3/tutorial/errors.html#predefined-clean-up-actions
Post-Condition:
  -"finally" block is good for tasks executed, regardless if an error occurs or not
Main Success Scenario:
  1. xxx:fill in 
  

Re-Throw Error
Main Success Scenario:
  1. Bubble Up Error
  2. End 
Alternatives:
  1a. Re-Throw as Different Error
    1a1. Apply logic
    1a2. Throw different error based on logic
    1a3. Go to step 2
  

Exit Code
Pre-Condition:
  -"Define Code Exits"
Main Success Scenario:
  1. xxx:fill in 
  
  
Define Code Exits
Main Success Scenario:
  1. xxx:fill in 
