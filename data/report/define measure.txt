Abbreviations
-YoY = Year over Year = Compare number on a date to the number on the same date a year ago 
-MoM = Month over Month = Compare number on a date to the number on the same date a month ago
-WoW = Week over Week = Compare number on a day to the number on the same day a week ago

**TASK MEASURES**

Contributing Non-Measure (an attribute):
<>TASK_ID
<>TASK_RUN_ID
<>TASK_RUN_START_TIME
<>TASK_RUN_END_TIME
<>TASK_DURATION_TIME_UNIT
<>TASK_RUN_ERROR
<>TASK_ENABLED_STATE

Measure Hierarchy:
<>TASK_RUN_RAM_USAGE
<>TASK_RUN_CPU_USAGE
<>TASK_RUN_DSK_USAGE
<>TASK_RUN_RECORD_COUNT
<>TASK_RUN_DATA_VOLUME_MB
<>TASK_DURATION_LIMIT
<>TASK_RAM_USAGE_LIMIT
<><>TASK_COUNT = COUNT(TASK_ID)
<><>TASK_RUN_COUNT = COUNT(TASK_RUN_ID for TASK_ID)
<><>TASK_RUN_ERROR_COUNT = COUNT(TASK_RUN_ID where TASK_RUN_ERROR exists)
<><>TASK_RUN_DURATION = TASK_RUN_END_TIME - TASK_RUN_START_TIME
<><>TASK_MIN_DURATION = MIN(TASK_RUN_DURATION)
<><>TASK_MAX_DURATION = MAX(TASK_RUN_DURATION)
<><>TASK_RUN_COMPLETION_STATUS = where TASK_RUN_END_TIME not exist or TASK_RUN_DURATION is 0
<><>TASK_RUN_OVERLAP_STATUS = where TASK_1_RUN_END_TIME > TASK_2_RUN_START_TIME 
<><>TASK_RUN_DURATION_LIMIT_EXCEEDED_STATUS = where TASK_RUN_DURATION > TASK_DURATION_LIMIT
<><>AVG_TASK_RECORD_COUNT = SUM(TASK_RUN_RECORD_COUNT) / TASK_RUN_COUNT
<><>AVG_TASK_DATA_VOLUME_MB = SUM(TASK_RUN_DATA_VOLUME_MB) / TASK_RUN_COUNT
<><><>AVG_RAM_USAGE = SUM(TASK_RUN_RAM_USAGE) / TASK_RUN_COUNT
<><><>TASK_COMPLETE_COUNT = COUNT(TASK_RUN_ID where TASK_RUN_COMPLETION_STATUS is 1)
<><><>AVG_TASK_DURATION = SUM(TASK_DURATION) / TASK_COUNT
<><><>TASK_RECORD_COUNT_HIGH = where TASK_RECORD_COUNT > AVG_TASK_RECORD_COUNT
<><><>TASK_DATA_VOLUME_MB_HIGH = = where TASK_DATA_VOLUME_MB > AVG_TASK_DATA_VOLUME_MB
<><><>TASK_ERROR_PCT = TASK_ERROR_COUNT / TASK_COUNT
<><><><>TASK_COMPLETION_PCT = TASK_COMPLETE_COUNT / TASK_COUNT
<><><><>TASK_SLOW = where TASK_DURATION > AVG_TASK_DURATION
<><><><>TASK_FAST = where TASK_DURATION < AVG_TASK_DURATION
<><><><><>AVG_TASK_COMPLETION_PCT = SUM(TASK_COMPLETION_PCT) / # of times the TASK_COMPLETION_PCT was recorded 

**HARDWARE MEASURES**
xxx:fill in


Define Measure
Main Success Scenario:
  1. "Define Reporting Goal"
  2. "Define Metric Role in Reporting Goal"
  3. "Define Metric Audience"
  4. "Define Min Data Quality for Metric"
  5. "Define Metric Business Logic"
  6. "Define Metric Technical Logic" 
  7. "Define Supporting Detail for Metric"
  
  
Define Reporting Goal
Main Success Scenario:
  1. xxx:fill in
  
  
Define Metric Role in Reporting Goal
Define Reporting Goal
Main Success Scenario:
  1. xxx:fill in
  
  
Define Metric Audience
Main Success Scenario:
  1. What motivates the audience to use the metric?
  2. Does the audiance understand how to make the metric value better?
  
  
Define Min Data Quality for Metric
Main Success Scenario:
  1. xxx:fill in
  
  
Define Metric Business Logic
Main Success Scenario:
  1. "Define Metric Time Attribute"
  2. xxx:fill in
  

Define Metric Technical Logic
Main Success Scenario:
  1. xxx:fill in

  
Define Metric Time Attribute
Main Success Scenario:
  1. xxx:fill in
  
  
Define Supporting Detail for Metric
Main Success Scenario:
  1. xxx:fill in
  

Define Finance Metric
Note:
  -guidance @ 
    -https://www.investopedia.com/financial-edge/0910/6-basic-financial-ratios-and-what-they-tell-you.aspx
Main Success Scenario:
  1. xxx:fill in
  
  
Define Index 
Note
 -Most commonly used simple index numbers are price, quantity, and value.
 -An index can incorporate several factors into a single metric 
Main Success Scenario:
  1. xxx:fill in
