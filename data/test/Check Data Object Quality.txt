Check Data Object Quality
Main Success Scenario:
  1. "Check Table Quality"
  2. "Check View Quality"
  3. "Check Executable"
  x. "Check Table Data Update Quality"
  x. "Check Column Use"
  x. "Check Index Quality"
  x. "Check Index Update Quality"
  x. "Check Partitioning Quality"
  
Check Table Data Update Quality
Main Success Scenario:
  x. Check data insert order aligns with index order
  x. Check insert frequency
  x. Check min, max, & avg number of rows inserted
  x. Check delete frequency
  x. Check min, max, & avg number of rows deleted
  x. Check update frequency
  x. Check if columns in primary key are updated
  x. Check if columns in a secondary key are updated
  x. Check update frequency of each column
  
Check Column Use
Note: 
  -Columns that are not used may be able to be dropped. 
Main Success Scenario:
  x. Check column use frequency
  x. xxx:fill in

Check Table Quality
Main Success Scenario:
  x. "Check Table Column Quality"
  x. "Check Temp table use"
  x. "Check Table Normalization"
  x. "Check Table Name Standard"
  x. "Check Table Definition"
  x. "Check Hard & Soft Delete"
  
Check Table Column Quality
Main Success Scenario:
  1. "Check Table Column Name Standard"
  2. "Check Table Column Definition"
  
Check Temp table use
Main Success Scenario:
  1. Check temp table data not needed for debugging
  2. "Check Temp table created and dropped at good times"
  3. "Check Temp table exists in RAM instead of on disk"
  4. "Check Temp Table Max Size"
  
Check Table Normalization
Main Success Scenario:
  1. xxx:fill in
  
Check Table Name Standard
Main Success Scenario:
  1. Check case used by table names (Camel, Pascal, other)
  2. xxx:fill in
  
Check Hard & Soft Delete
Main Success Scenario:
  1. Check logic
  2. Check indication of soft delete
  
Check View Quality
Main Success Scenario:
  x. "Check View Column Quality"
  x. "Check View Normalization"
  x. "Check View Name Standard"
  x. "Check View Definition"
  x. "Check Hard & Soft Delete"
  x. "Check View Nesting"
  
Check Executable
Main Success Scenario:
  x. "Check Routine Quality"
  x. "Check Non-Routine Query Quality"
  x. "Check Trigger Quality"
    
Check Routine Quality
Main Success Scenario:
  x. "Check Procedure Quality"
  x. "Check Function Quality"
  
Check Non-Routine Query Quality
Main Success Scenario:
  x. "Check Query Quality"
  x. Check Run Time

Check Procedure Quality
Main Success Scenario:
  x. "Check Parameter Quality"
  x. "Check Query Quality"
  x. Check Run Time'
  x. "Check Proceddure Name Standard"

Check Function Quality
Main Success Scenario:
  x. "Check Parameter Quality"
  x. "Check Query Quality"
  x. Check Run Time
  x. "Check Function Name Standard"

Check Trigger Quality
Main Success Scenario:  
  x. "Check Parameter Quality"
  x. Check Query Quality
  x. Check Run Time
  x. "Check Trigger Name Standard"
  
Check Index Quality
Main Success Scenario:
  x. "Check Uniqueness"
  x. "Check Index Column Order"
  x. "Check Index Name Standard"
  x. "Check Index Stats Update Frequency" 
  
Check Index Update Quality
Main Success Scenario:
  x. Check time impact of inserts, deletes, & updates on primary index 
  x. Check time impact of inserts, deletes, & updates on non-primary index
  
Check Query Quality
Main Success Scenario:
  x. "Check JOIN Quality"
  x. "Check DISTINCT & UNION use"
  x. "Confirm centralized logic for common column"
  x. "Check Self-Documenting Code"
  x. "Confirm unneeded data removed as soon as possible"
  x. Check Run Time

Check DISTINCT & UNION use
Main Success Scenario:
  x. "Check Distinct Use"
  x. "Check Union Use"
  x. Confirm both Distinct and Union (meaning "Union" instead of "Union All") are not being used at the same time

Check Distinct Use
Main Success Scenario:
  x. Why is Distinct being used
  x. Can a join be improved to remove the use of distinct
  x. Can one or more of the tables be updated to avoid the use of distinct
  x. Can a filter be added to avoid the use of distinct 
  
Check Union Use 
Main Success Scenario:
  x. Why is Union used
  x. Can Union All be used instead
  
  
  -"Check Table Quality"
    -"Check for two or more columns with same data in same table"
    -"Check Name Standard is Followed"
      -"Check Table & Column Names Human understandable"
    -"Check for not expected characters in SQL object name"
    -"Check column nullability"
      -"Check current expections"
      -"Check future expections"
    -"Check appropriate column data type specified"
      -"Check current expections"
      -"Check future expections"
    -"Check appropriate column length specified"
      -"Check current expections"
      -"Check future expections"
    -"Define Soft and Hard Delete"
      -"Define Logic"
      -"Define SQL Objects"
    -"Check Temp table use"
      -Check temp table data not needed for debugging
      -"Check Temp table created and dropped at good times"
      -"Check Temp table exists in RAM instead of on disk"
    -"Confirm Normalized or De-Normalized table and why"
  -"Check Trigger Quality"
    -xxx:fill
  -"Check View Quality"
    -"Check Name Standard is Followed" 
    -"Check number of view nestings"
  -"Check Index Quality"
    -Confirm clear explanation exists for all indexes
    -Confirm clustered index not used on table that will have several inserts, updates, or deletes
  -"Check Partitioning Quality"
    -xxx:fill
  -"Check Routine Quality"
    -"Check Procedure Quality"
      -"Check Name Standard is Followed"
        -"Check Routine Name Standard followed"
        -"Check Routine Parameter Name Standard followed"
      -"Check Query Format"
        -"Check Query Format follows standard"
          -"Check text case"
      -"Check Logic Quality"
        -"Check JOIN Quality"
        -"Check confirm DISTINCT & UNION Needed"
        -"Confirm centralized logic for common column"
        -"Confirm Code is self-documenting"
        -"Confirm unneeded data removed as soon as possible"
    -"Check Function Quality"
      -xxx:fill
    -Check Run Time
   
