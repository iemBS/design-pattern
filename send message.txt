Send Message
Note:
  -Message content should properly convey urgency
  -Message content should be enough for the audience to make a proper first step
  -Message should be put in front of the right people 
  -Message should not create white noise 
  -Message publish can be enabled or disabled 
  -Retention of messages will not be described in this file
Pre-Conditions:
  -"Impact of Message Send on Publisher"
  -"Define Possible Message Types"
Main Success Scenario:
  1. "Send Error Message"
Alternatives:
  1a. "Send Warning Message"
  1b. "Send Note Message"
  
  
Define Possible Message Types
Note
  -Message types of error, warning, and note are common
Main Success Scenario:
  1. Group possible priorities 
  2. Group possible severities 
  3. Group possible content 
  4. End
  
  
Send Error Message
Pre-Condition:
  -Message indicating an issue that 
Main Success Scenario:
  1. "Set Message Attributes"
  2. "Format Message"
  3. "Send Message with X"
Alternatives:
  3a. Received send error from message consumer
    3a1. xxx:fill in
  
  
Send Warning Message
Pre-Condition:
  -xxx
Main Success Scenario:
  1. "Set Message Attributes"
  2. "Format Message"
  3. "Send Message with X"
Alternatives:
  3a. Received send error from message consumer
    3a1. xxx:fill in
  
  
Send Note Message
Pre-Condition:
  -Usually informational, but messages should be auto-watched for warnings, errors, and alternate software paths. 
Main Success Scenario:
  1. Enable or disable message
  2. "Set Message Object Attributes"
  3. "Format Message"
  4. "Send Message with X"
Alternatives:
  4a. Received send error from message consumer
    4a1. Ignore, since these are not usually important messages 
    
    
Define Standard Flag
Note:
  -Common flags for the same kind of message across your environment will help with issue analysis
  -Possible common flags to include in the message
    -TASK_START
    -TASK_END
Pre-Condition:
  -Make sure the standard flags are not used for anything else in the messages. Otherwise, they could lose their findablity value.
  -If there is a standard already in existence, try to use that
Main Success Scenario: 
  1. xxx:fill in
  
  
Define Standard Publisher Name
Pre-Conditions:
  -If there is a standard already in existence, try to use that
  -Factor in message size limit
Main Success Scenario:
  1. Collect list of all apps that are generating messages
  2. Define a concise and unique name for that publisher
  3. Store standard publisher name list in a central location
  
  
Agree on Timezone Use
Note:
  -Having all message times using the same timezone avoids confusion when relating messages from two or more publishers
Main Success Scenario:
  1. xxx:fill in
  

Set Message Object Attributes
Pre-Conditions:
  -"Define Standard Publisher Name"
  -"Agree on Timezone Use"
  -Factor in message size limit
Note:
  -Message Time is the time the message is generated and not the time it is published. This is because the time needs to align with what triggered the message. 
  -A Run ID is a unique identifier that defines a specific activity within a publisher.
Main Success Scenario
  1. Set Message Type to ERROR, WARN, or NOTE
  2. Set Publisher to an app name from a standard list of app names 
  3. Set Message Time
  4. "Set Message Attribute" 
  5. Set Run ID 
  6. "Set Environment Attribute"
  
  
Set Message Time
Pre-Condition:
  -Use a time format that ...
    -Has smallest enough time units to express the needed messages
    -makes the timezone clear
    -allows the order of steps in a task to be seen 
    -is readable by the message audiance 
    -can be used by the message audiance 
Main Success Scenario:
  1. xxx:fill in
  
  
Set Environment Attribute
Pre-Conditons:
  -Use a set list of environment values. Like DEV, TST, and PRD. 
Main Success Scenario:
  1. Set to a standard value from an established list
  
  
Define Flag Format
Note:
  -If you have a flag of TASK_START, you want to know how to extract the task name that is using that flag
    -Example: If you have "TASK_START:XZYGlueJob" in the message you want to be clear on how you extract the "XZYGlueJob" glue job from the flag to task name pair in the message. 
Pre-Condition:
  -"Define Standard Flag"
Main Success Scenario:
  1. xxx:fill in
  
  
Set Message Attribute
Note:
  -Do not include PII/PCI data
Pre-Condition:
  -"Define Flag Format"
Main Success Scenario:
  1. "Collect data for Message attribute"
  2. "Map Message Attribute to Purpose"
  
 
Collect data for Message attribute
Main Success Scenario:
  1. Collect hard coded parts of the message from the source code
  2. "Collect Calculation Result for Message attribute"
  3. End 
Alternatives:
  1a. Get a single hard coded message from the source code
    1a1. Get hard coded message
    1a2. Go to step 3


Collect Calculation Result for Message attribute
Note:
  -types of calculations that might be done in the source code and sent in a message
    -task run time
    -count
    -percentage
    -average
    -max
    -min
    -sum
    -ratio 
Pre-Conditions:
  -Specify max run time of calculation included in the message
  -Calculation run time cannot exceed the specified max run time 
  -Calculation cannot be easily calculated elsewhere 
Main Success Scenario:
  1. Run calculation in source code
  2. End
Alternatives:
  1a. Calculation run time exceeds specified max run time
    1a1. Append "in-message-calc exceeded run time of X" message to existing errors, where X is the max time and the time units
    1a2. Note "N/A" where calc value would have went in message 
    1a3. Go to step 2. 
  
  
Set Consumer to Message Map
Pre-Conditions:
  -Email limits: xxx:fill in
  -Phone Text limits: xxx:fill in
  -Phone Message limits: xxx:fill in
  -File limits: xxx:fill in
  -3rd Party Software limits: xxx:fill in
Main Success Scenario:
  1. xxx:fill in
  
  
Understand Format Config Ability
Main Success Scenario: 
  1. Understand what messages CANNOT be configured
  2. Understand what messages CAN be configured
  

Format Message
Pre-Conditions:
  -"Set Consumer to Message Map"
  -"Understand Format Config Ability"
Main Success Scenario:
  1. "Format Email Message"
Alternatives:
  1a. "Format Phone Text Message"
  1b. "Format File Message"
  1c. "Format 3rd Party Software Message"
  1d. "Format Phone Message"
  
  
Format Email Message
Main Success Scenario:
  1. Set FROM
  2. Set TO
  3. Set CC
  4. Set BCC
  5. "Format Message as Text"


Format Phone Text Message
Pre-Conditions:
  -Consumer ok with phone text charges
  -Consumer ok with message length
Main Success Scenario:
  1. Set TO
  2. "Format Message as Text"

  
Format Message as Text
Pre-Condition:
  -Use delimiter between message attributes that will not conflict or confuse with attribute values
Main Success Scenario:
  1. Message Type::Publisher::Time::Message
Alternatives:
  1a. Use | delimiter
  1b. Use || delimiter
  1c. Use , delimiter
  1d. use ; delimiter
  
  
Format Message as Sound
Main Success Scenario:
  1. xxx:fill in
  
  
Send Message with X
Main Success Scenario:
  1. Send Message with Email
  2. "Consume Message"
Alternatives:
  1a. Send Message with Phone Text
  1b. Send Message with 3rd Party
  1c. Send Message with File Writer
  1d. Send Message with Phone


Consume Message
Pre-Conditions:
  -For consumers accepting text
    -Delimiter used to format message is accepted by consumer 
Main Success Scenario:
  1. "Consumed by Email"
Alternatives:
  1a. "Consumed by Phone Text"
  1b. "Consumed by File"
  1c. "Consumed by 3rd Party Software"
  1d. "Consumed by Phone"
  

Consumed by Email
Main Success Scenario:
  1. xxx:fill in
  
  
Consumed by Phone Text
Main Success Scenario:
  1. xxx:fill in
  
  
Consumed by File
Main Success Scenario:
  1. xxx:fill in
  
  
Consumed by 3rd Party Software
Main Success Scenario:
  1. xxx:fill in
  
  
Consumed by Phone
Main Success Scenario:
  1. xxx:fill in
  
  
Map Message Attribute to Purpose
Main Success Scenario:
  1. How does message support SLA?
  2. How does message support maintenance?
  3. How does message support performance awareness?
  
  
Impact of Message Send on Publisher
Main Success Scenario:
  1. xxx:fill in
  

 
