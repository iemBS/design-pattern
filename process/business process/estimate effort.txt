Estimate Effort
  1. "Understand Work Activities"
  2. "Base Estiamte on Previous Work"
  3. "Estimate Numerous Small Activities as Categories"
  x. End


Understand Work Activities
Note:
  -Not all of these contribute to the effort for this item, but they all contribute to the time the item stays open
Main Success Scenario:
  1. See points below
-requirements gathering
-requirements gathering delay: permissions needed
-requirements gathering delay: requirements provider not available 
-requirements gathering delay: requirements provider does not know enough
-requirements gathering delay: waiting for a process to start and stop
-requirements gathering delay: new person 
-analysis
-analysis delay: permissions needed
-analysis delay: notes, docs, research deleted
-analysis delay: waiting for a process to start and stop
-analysis delay: new person
-business design
-business design delay: lack of requirements 
-business design delay: new person
-design review by business
-business design review delay: reviewer not available 
-business design review delay: permission needed
-business design review delay: new person
-tech design
-tech design delay: permission needed for my access
-tech design delay: permission needed to see other user's perspective
-tech design delay: lack of requirements 
-tech design delay: notes, docs, research deleted
-tech design delay: new person
-tech design review by another developer
-tech design review delay: developer reviewer not available 
-tech design review delay: permission needed
-tech design review delay: lack of requirements 
-tech design review delay: new person
-redesign
-coding
-coding delay: lack of requirements lead to more coding to deal with unknowns
-coding delay: data quality
-coding delay: find bug that CAN be worked around
-coding delay: find bug that CANNOT be worked around
-coding delay: do not understand technology being used
-coding delay: do not understand coding language being used 
-coding delay: do not understnad coding library being used
-coding delay: waiting for a process to start and stop
-coding delay: other item being tested in same area
-coding delay: other item being developed in same area
-coding delay: insufficient tech design 
-coding delay: remove existing item and work on higher priority item instead 
-coding delay: new person
-test by developer, 1 or more iterations 
-test by developer delay: multiple testers and items on same area
-test by developer delay: new person
-re-coding, 1 or more iterations 
-learn new tech
-learn new tech delay: permission needed
-learn new tech delay: new way of using known tech
-learn new tech delay: new person
-hardware resource delay: performance limit reached
-hardware resource delay: performance limit reached with shared hardware resource
-hardware resource delay: waiting for a process to start and stop
-software resource delay: licensing limit
-software resource delay: performance limit reached with shared licensing limit
-software resource delay: waiting for a process to start and stop 
-documentation
-documentation review by other person
-documentation review delay: reviewer not available 
-documentation review delay: new person
-documentation update
-documentation provided in other perspectives 
-code review 1 or more iterations 
-code review delay: other developer not available 
-code review delay: permission needed
-code review delay: lack of requirements lead to more coding or coding that is incomplete 
-code review delay: technology discussion 
-code review delay: do not understand technology being reviewed
-code review delay: do not understand coding language being reviewed 
-code review delay: do not understnad coding library being reviewed
-code review delay: more code to review than expected
-code review delay: code more complex than expected 
-code review delay: new person
-re-coding 1 or more iterations after code review 
-deploy prep
-deploy, 3 (at least 1 per environment) or more iterations
-deploy delay: specific deploy window required
-deploy delay: permission needed
-deploy delay: is new deploy process
-deploy delay: deploy process uses shared hardware resources
-deploy delay: more changes to deploy than expected
-deploy delay: new person
-test by tester, 1 or more iterations 
-test by tester delay: permissions needed
-test by tester delay: tester not available 
-test by tester delay: insufficient test guidance 
-test by tester delay: lack of requirements caused more coding and more coding caused more testing
-test by tester delay: Tester blocked and developer not available to research
-test by tester delay: developer needs to assist with testing 
-test by tester delay: data quality
-test by tester delay: waiting for a process to start and stop
-test by tester delay: multiple testers and items on same area
-test by tester delay: other item being tested in same area
-test by tester delay: other item being developed in same area
-test by tester delay: more to test than expected
-test by tester delay: new person
-re-coding 1 or more iterations after test by tester
-test by user
-test by user delay: permissions needed
-test by user delay: test window required
-test by user delay: user not available 
-test by user delay: insufficient test guidance 
-test by user delay: user blocked and tester and developer are not available 
-test by user delay: lack of requirements leads to less than desirable result that is tested by the user
-test by user delay: waiting for a process to start and stop
-test by user delay: multiple testers and items on same area
-test by user delay: other item being tested in same area
-test by user delay: other item being developed in same area
-test by user delay: more to test than expected
-test by user delay: new person
-re-coding 1 or more iterations after test by user
-general delay: orders from two or more managers
-general delay: unclear project priorities 
-general delay: jumping between multiple work items
-general delay: recalibration when jumping between multiple work items
-general delay: time spent on another project
-general delay: too much time spent in meetings
-general delay: new person
-next sprint prep (factoring in all of the above for each item)


Base Estiamte on Previous Work
Main Success Scenario:
  1. xxx:fill in 
  
  
Estimate Numerous Small Activities as Categories
Main Success Scenario:
  1. "Review Others Work"
  2. "Deploy Others Work"
  3. "Research Potential Bug"
  4. "Prep for Work Refinement and Planning"
  

Prep for Work Refinement and Planning
Note:
  -Refinement is clarifying the work to be done
  -Planning is choosing what refined items to work on during the next period
Main Success Scenario:
  1. Clarify work you understand but NOT assigned
  2. Clarify work you understand and ARE assigned
  3. Clarify work you DO NOT understand but tasked with clarifying
  
  
Review Others Work
Note:
  -This is dependent on the planned work items in the period
Pre-Condition:
  -Use this only if you need to control what sprint your spent hours are reflected in because your logged hours are being moved to later sprints with the incomplete item that you do not own
Main Success Scenario:
  1. "Review Others Docs"
  2. End 
Alternatives:
  1a. Review code instead 
    1a1. "Review Others Code" 
    1a2. go to step 2
  
  
Review Others Docs
Main Success Scenario:
  1. Undertstand their potential content
  2. Estimate time needed to review that content
  2. xxx:fill in 
  
  
Review Others Code
Main Success Scenario:
  1. Understand their potential changes
  2. Estimate time needed to review that work
  x. xxx:fill in 
  

Deploy Others Work
Note:
  -This is dependent on the planned work items in the period
Pre-Condition:
  -Use this only if you need to control what period your spent hours are reflected in because your logged hours are being moved to later sprints with the incomplete item (that you do not own)
Main Success Scenario:
  1. Understnad their potential changes
  2. Estimate time needed to deploy that work
  x. xxx:fill in 


Research Potential Bug
Pre-Condition:
  -"Base Estiamte on Previous Work"
Main Success Scenario:
  1. Research potential bug
  2. Becomes a bug
  3. Determine bug needs to be fixed now
  4. Determine short term bug fix can be done now
  5. Do short term bug fix 
  6. End
Alternatives:
  2a. Does not become bug
    2a1. go to last step
  3a. Determine bug can be fixed later
    3a1. go to last step
  4a. Determine long term bug fix needs to be done now
    4a1. do long term bug fix
    4a2. go to last step
