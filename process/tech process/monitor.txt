Monitor
Main Success Scenario:
  1. "Define Monitoring Goal"
  2. "Monitor Environment"
  3. End 
Alternatives:
  2a. Narrow monitoring to a process
    2a1. "Monitor Process"
    2a2. Go to step 3
    
    
Define Monitoring Reason
Main Success Scenario:
  1. Shared Hardware (or Virtual) Resources
  2. End 
Alternatives:
  1a. Do not trust human resources
  1b. Reduce time looking into issue
  1c. Know about issues sooner
  1d. Find issue before others
  1e. Do not have human resource skills available all the time to research issues
  1f. Had too many issues in the past
  1g. Do not have security permissions access issue details all the time
  1h. Do not want to grant access for issue investigation
  1i. See where optimization needed
  1j. Clarify steps/tasks in process

 
Define Monitoring Goal
Pre-Condition:
  -"Define Monitoring Reason"
Maih Success Scenario:
  1. Check functionality during development
  2. End 
Alternatives:
  1a. during Testing 
    1a1. Check functionality during testing
    1a2. Go to step 2
  1b. during regular use
    1b1. Watch functionality during regular use
    1b2. Go to step 2
    
    
Get Data
Pre-Condition:
  -"Define Measure"
Note:
  -Possible data to get
    -RunID
    -StepID
    -Start Time
    -End Time
 Main Success Scenario:
   1. xxx:fill in 
   2. "Derive Data"
   
   
Define Measure
Main Success Scenario:
  1. xxx:fill in 
  2. End
Alternatives:
  1a. More types of data available than expected
    1a1. "Define Measure"
    1a2. Go to step 2
  1b. Less types of data available than expected
    1b1. "Define Measure"
    1b2. Go to step 2
    
 
Derive Data
Pre-Condition:
  -"Get Data"
Main Success Scenario:
  1. Calc duration from Start Time and End Time
  x. xxx:fill in 
  
  
Set Measure Limit
Main Success Scenario:
  1. Set hard limit for measure 
  2. End
Alternatives:
  1a. Priority, Severity, or both for a measure are less than in the main scenario
    1a1. Set soft limit for measure
    1a2. Go to step 2
  1b. Limit factors in two or more measures
    1b1. Set limit logic between two or more measures
    1b2. Go to step 2
  
  
Set Measure Alert
Pre-Condition:
  -"Set Measure Limit"
Main Success Scenario:
  1. Set alert based on measure and limit
  2. End
    
    
Monitor Environment
Pre-Conditions:
  -Concerned with environment health and not a specific process
Main Success Scenario:
  1. See environment measures 
  2. See aggregate measures that are built on top of the basic ones
  3. Compare environment measures to aggregate environment measures to see if runs are better or worse than usual
  4. Communicate hard hardware and software limits
  5. "Set Measure Limit"
  6. "Set Measure Alert"
  7. End 
    
    
Monitor Process
Note:
  -Apply "Separate Monitor and Process"
Pre-Conditions:
  -Concerned with process health
  -Process provides sufficient data or ability to monitor
  -Monitoring able to access process sufficiently
Main Success Scenario:
  1. See Process Start, Stop, Duration, Run Status, Completion Status
  2. See Tasks within Process
  3. See Task Start, Stop, Duration, Run Status, Completion Status, Status (enabled/disabled)
  4. See aggregate measures that are built on top of the basic ones
  5. Compare process and task runs to aggregate measures to see if runs are better or worse than usual
  6. Associate Runs to Environment measures (at task, process, service instance, or service level)
  7. Communicate hard hardware and software limits
  8. "Set Measure Limit"
  9. "Set Measure Alert"
  10. End 
  
  
Separate Monitor and Process
Main Success Scenario:
  1. Change for monitor has minimal or no change for process
  2. "Define Process Min Contribution to Monitoring"
  x. xxx:fill in 
  

Define Process Min Contribution to Monitoring
Main Success Scenario:
  1. xxx:fill in 
    
