Define Tech Spec
Notes:
  -guidance @ https://stackoverflow.blog/2020/04/06/a-practical-guide-to-writing-technical-specs/
  -guidance @ https://eng.lyft.com/awesome-tech-specs-86eea8e45bb9
  -guidance @ https://developers.google.com/tech-writing
  -guidance @ https://medium.com/machine-words/writing-technical-design-docs-71f446e42f2e
  -Level of detail in the doc will depend on the purpose of the doc
  -Factor in the goals for each component.
    -Meet resource usage?
    -Meet run time?
    -Meet style?
Main Success Scenario:
  1. "Define Header"
  x. "Define Intro"
  3. "Define Solutions"
  x. "Define Success Evalualation"
  x. "Define Work"
  x. "Define Time"
  x. "Define Deliberation"
  x. "Define End Notes"

Define Header
Note: 
  -Only Title may be needed here because the rest of the steps may be captured in version control history.
Main Success Scenario: 
  1. Note Title
  2. Note Author
  3. Note Team
  4. Note Reviewers
  5. Note Created On
  6. Last Updated
  7. Note ID and link for task tracker tool
  
Define Time
Note:
  -This defines times for any cycles or events
Main Success Scenario:
  1. xxx:fill in
  
Define Intro
Main Success Scenario: 
  1. "Define Purpose"
  2. "Define Overview"
  3. "Define Terms"
  4. "Define Scope"
  5. "Define Assumptions"
  6. "Define Open Questions"
  
Define Purpose
Note: 
  -This is a summary of the Overview section of the doc
  -This tells me quickly what this doc is for. 
  -Limit to one sentence. 
Main Success Scenario:
  1.xxx:fill in
  
Define Overview
Note: 
  -More details than the doc Purpose. 
  -More lines than the single one for the Purpose. 
Main Success Scenario:
  1. xxx:fill in
  
Define Terms
Main Success Scenario:
  1. xxx:fill in
  
Define Scope
Note:
  -The "Define Future Work" use case looks at work details and steps here look at features
Main Success Scenario: 
  1. Define In Scope
  2. Define Out of Scope
  3. "Define Out of Scope till a future time"
  
Define Out of Scope
Note:
  -Do this for each feature that is out of scope
Main Success Scenario
  1. Define why it is out of scope
Extension:
  1a. Another project is working on the feature
    1a1. Provide links to that other project
  1b. An impediments is blocking that feature
    1b1. Define the impediment
  1c. xxx:fill in
  
Define Out of Scope till a future time
Note:
  -Do this for each feature that is out of scope till a future time
  -Is future time a calendar time or an event?
Main Succes Scenario:
  1. Till [specific time]
  2. Till [time window]
  3. Till Unknown Time
  4. Till [a time conditional on another event]
  
Define Solutions
Main Success Scenario: 
  1. "Define Existing Solution"
  2. "Define Proposed Solution"
  x. "Define Proposed Alt Solution"
  x. "Define Plans"
  x. "Define Impact on Other Teams"
  x. "Define 3rd Party Services and Platforms Considerations"
  x. "Define Cost Analysis"
  x. "Define Security Threats"
  x. "Define Privacy"
  x. "Define Regional"
  x. "Define Accessibility"
  x. "Define Operations"
  x. "Define Risks"
  x. "Define Support"
Alternatives:
  1a. Existing Solution does not exist 
    1a1. State what components of an existing solution exists
  1b. Existing Solution is not known
    1b1. Note what is known about the existing solution
    1b2. Note who would know about the existing solution
  
Define Plans
Note:
  -Section may just contain a link to another doc
Main Success Scenario:
  1. "Define Test Plan"
  2. "Define Monitering and Alerting Plan"
  3. "Define Release and Deployment Plan"
  4. "Define Rollback Plan"
  5. "Define Security Plan"
  
Define Existing Solution
Main Success Scenario:
  x. "Define Existing Solution Description"
  x. "Define Dependencies of Existing Solution"
  x. "Define Pros and Cons of Existing Solution"
  
Define Proposed Solution
Main Success Scenario:
  x. "Define External Components that will be interacted with"
  1. "Define Proposed Solution Description"
  2. "Define Dependencies of Proposed Solution"
  3. "Define Pros and Cons of Proposed Solution"
  4. "Define Adaptability of Proposed Solution"
  x. "Define Data Model"
  x. xxx:fill in
  
Define Proposed Alt Solution
Desc: This may answer questions about design choices before others pose them.
Note: 
  -Do this for each proposed alt solution that you expect to be suggested
Main Success Scenario:
  1. Define Proposed Alt Solution Description
  2. Define Pros and Cons
  3. Define why alt solution would not work
  4. Define ways in which the alt solution is inferior to the proposed solution
  5. Define mitigation plan to next best alt in case proposed solution falls through
  
Define Security Threats
Main Success Scenario:
  1. "Define Potential Threats"
  2. "Define Potential Threat Mitigation"
  3. "Define Solution's Security Impact on other components it is interfacing with"
  
Define Regional
Main Success Scenario:
  1. "Define Internationalization and Localization"
  2. "Define Latency Issues"
  3. "Define Legal Concerns" 
  4. "Define Service Availability"
  5. "Define Data Transfer across regions"
  
Define Accessibility
Main Success Scenario:
  1. "Define Accessibility Methods"
  2. "Define Evaluate Accessibility"
  
Define Operations
Main Success Scenario:
  1. xxx:fill in
  
Define Risks
Note:
  -Cost-Benefit Analysis guide @ https://en.wikipedia.org/wiki/Cost%E2%80%93benefit_analysis
Main Success Scenario:
  1. Note Risks taken with this solution
  2. Note Risks taken that cannot be rolled back
  3. Note Cost-Benefit Analysis of risks taken
  
Define Support
Main Success Scenario:
  x. Define Communication Path from Support Team to Users
  x. Define Self Help
  x. Define Support Team Responsible for Solution Maintenance
  
Define Privacy
Main Success Scenario:
  1. "Define Adherence to Data Privacy"
  2. "Define Way of protecting users' data privacy"
  3. "Define Personalization and Privacy Tradeoffs"
  
Define External Components that will be interacted with
Main Success Scenario:
  x. "Define [External Component A] Description"
  x. "Define [External Component B] Description"
  
Define Adaptability of Proposed Solution
Note:
  -"Define Adding Future Requirements" differs from "Out of Scope till a future time" because requirements are more detailed than features. 
  -Longevity is checking to see if it will age well independent of size growth
Main Success Scenario:
  1. "Define Longevity"
  2. "Define Scalability"
  3. "Define Limitations"
  4. "Define Recover from failure"
  5. "Define Adding Future Requirements"
  
Define Data Model
Main Success Scenario:
  1. "Define Schema Definitions"
  2. "Define Modified Data Models"
  x. "Define New Data Models"
  x. "Define Data Validation"
  
Define New Data Models
Main Success Scenario:
  1. "Define Data Change Probability"
  2.xxx:fill in
  
Define Data Change Probability 
Note:
  -Change probability for a field will give a probablity that a field will change on a particular day. 
Main Success Scenario:
  1. Define Rate of change for each field
  2. Define events for each field that cause them to change
  3. Define change probability for each field
  
Define Impact on Other Teams
Main Success Scenario:
  1. Define More Work for Other Teams
  2. Define Less Work for Other Teams
  
Define Cost Analysis
Main Success Scenario:
  1. "Define Cost to Release and Deploy Solution"
  2. "Define Cost of the Solution per Day"
  
Define Success Evalualation
Main Success Scenario:
  1. Define Security Impact
  2. Define Performance Impact
  3. Define Cost Impact
  4. Define Impact on Other Components and Services
  5. Define List of metrics to capture
  6. Define Tools to capture and measure metrics 
  
Define Work
Main Success Scenario:
  x. "Define Work Timeline"
  x. "Define Priority"'
  x. "Define Milestones"
  x. "Define Future Work"
  
Define Work Timeline
Main Success Scenario:
  x. "Define List of specific, measureable, and time-bound tasks"
  x. "Define Resources needed to finish each task"
  x. "Define Time estimates for how long each task needs to be completed"
  
Define Priority
Main Success Scenario:
  x. "Categorize tasks by urgency and impact"
  
Define Milestones
Main Success Scenario:
  x. "Define checkpoints when significant chunks of work will have been completed"
  x. "Define metrics to indicate the passing of the milestone"
  
Define Future Work
Main Success Scenario:
  x. List of tasks that will be completed in the future
  
Define Deliberation
Main Success Scenario:
  1. "Define Discussion"
  x. "Define Open Questions"
  
Define End Notes
Main Success Scenario:
  x. "Define Related Work"
  x. "Define References"
  x. "Define Acknowledgements"
  
Define References
Note:
  -Relevant docs are other docs in the current project, for software used, software languages used, styles used, other projects, meeting notes, meeting recordings, etc.
  -Sites are anything that is not docs. 
  -Do not have an index with links to docs and sites because you have this sectino. 
Main Success Scenario:
  1. Links to relevant docs
  2. Links to relevant sites
  
Define Acknowledgements
Main Success Scenario:
  1. Credit people who have contributed to the design
  
Define Assumptions
Note: 
  -Project assumptions are those things you assume to be true for your project to be successful. They're called assumptions because you assume that for your project to move forward successfully as planned, these things will be in place.
  -Guidance @ https://projectbliss.net/project-assumptions-list/
Main Success Scenario:
  1. "Define Resource Assumptions"
  2. "Define Delivery Assumptions"
  3. "Define Budget Assumptions"
  4. "Define Finance Assumptions"
  5. "Define Scope Assumptions"
  6. "Define Schedule Assumptions"
  7. "Define Methodoly Assumptions"
  8. "Define Technology Assumptions"
  9. "Define Architecture and Design Assumptions"

Define Resource Assumptions
Note:
  -These are people, materials, and facilities
Main Success Scenario:
  1. xxx:fill in

Define Delivery Assumptions
Note:
  -This is what is intended to be delivered.
Main Success Scenario:
  1. xxx:fill in

Define Budget Assumptions
Note:
  -This is estimated Cost of Project
Main Success Scenario:
  1. xxx:fill in

Define Finance Assumptions
Note:
  -funding to complete the project
Main Success Scenario:
  1. xxx:fill in
  
Define Scope Assumptions
Note:
  -the scope of the what’s to be delivered
Main Success Scenario:
  1. xxx:fill in
  
Define Schedule Assumptions
Note:
  -tasks, durations, and dependencies needed to complete the project
Main Success Scenario:
  1. xxx:fill in
  
Define Methodology Assumptions
Note:
  -the approach you’ll take to completing the project.
Main Success Scenario:
  1. xxx:fill in
  
Define Technology Assumptions
Note:
  -this could cover software development, platforms, environments, and infrastructure
Main Success Scenario:
  1. xxx:fill in
  
Define Architecture and Design Assumptions
Note:
  -
Main Success Scenario:
  1. xxx:fill in

Define Open Questions
Main Success Scenario:
  1. xxx:fill in

